plugins {
    id 'java-library'
}

sourceSets {
    main.java.srcDirs = ['main/java']
    main.resources.srcDirs = ['main/resources']
    test.java.srcDirs = ['unused']
    test.resources.srcDirs = ['unused']
}

apply plugin: 'maven-publish'

group 'strata.foundation'
version "$major$minor$patch"

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    api project(':Tests:Strata.Foundation.CoreTest')
    api project(':Tests:Strata.Foundation.SpringTest')
    api project(':Tests:Strata.Foundation.ChronicleTest')
    api project(':Tests:Strata.Foundation.KafkaTest')
    api 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    api 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

jar {
    dependsOn(':Components:Strata.Foundation.Core:jar')
    dependsOn(':Components:Strata.Foundation.Spring:jar')
    dependsOn(':Components:Strata.Foundation.Chronicle:jar')
    dependsOn(':Components:Strata.Foundation.Kafka:jar')
    dependsOn(':Tests:Strata.Foundation.CoreTest:jar')
    dependsOn(':Tests:Strata.Foundation.SpringTest:jar')
    dependsOn(':Tests:Strata.Foundation.KafkaTest:jar')
    dependsOn(':Tests:Strata.Foundation.ChronicleTest:jar')

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
    publications {
        StrataFoundationSpring(MavenPublication) {
            artifactId = 'strata-foundation-testsuite'
            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            repositories {
                maven {
                    name "GitHubPackages"
                    url "https://maven.pkg.github.com/StrataFrameworkSet/repository"
                    credentials {
                        username = "$System.env.GITHUB_USER"
                        password = "$System.env.GITHUB_PASSWORD"
                    }
                }
            }
        }
    }
}
